=begin
#Role Based Access Control

#The API for Role Based Access Control.

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for RBACApiClient::PermissionApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PermissionApi' do
  before do
    # run before each test
    @api_instance = RBACApiClient::PermissionApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PermissionApi' do
    it 'should create an instance of PermissionApi' do
      expect(@api_instance).to be_instance_of(RBACApiClient::PermissionApi)
    end
  end

  # unit tests for list_permission_options
  # List the available options for fields of permissions for a tenant
  # By default, options of application is returned. And could be resource_type or verb on demand.
  # @param field specify which fields of permission to display
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Parameter for selecting the amount of data returned.
  # @option opts [Integer] :offset Parameter for selecting the offset of data.
  # @option opts [String] :application Filter returned options based on application. You may also use a comma-separated list to filter on multiple applications.
  # @option opts [String] :resource_type Filter returned options based on resource_type. You may also use a comma-separated list to filter on multiple resource_types.
  # @option opts [String] :verb Filter returned options based on verb. You may also use a comma-separated list to filter on multiple verbs.
  # @option opts [String] :exclude_globals If set to &#39;true&#39;, this will exclude any permission option with a global allowance on the supplied &#39;?field&#x3D;&#39; value of &#39;application&#39;, &#39;resource_type&#39; or &#39;verb&#39;. The default is &#39;false&#39;.
  # @option opts [String] :allowed_only If set to &#39;true&#39;, this will exclude any permission with a role where the &#39;application&#39; is not in the role create allow list.
  # @return [PermissionOptionsPagination]
  describe 'list_permission_options test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_permissions
  # List the permissions for a tenant
  # By default, responses are sorted in ascending order by permission application.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Parameter for selecting the amount of data returned.
  # @option opts [Integer] :offset Parameter for selecting the offset of data.
  # @option opts [String] :order_by Parameter for ordering permissions by value. For inverse ordering, supply &#39;-&#39; before the param value, such as: ?order_by&#x3D;-application
  # @option opts [String] :application Exact match for the application name of a permission. You may also use a comma-separated list to match on multiple applications.
  # @option opts [String] :resource_type Exact match for the resource type name of a permission. You may also use a comma-separated list to match on multiple resource_types.
  # @option opts [String] :verb Exact match for the operation verb name of a permission You may also use a comma-separated list to match on multiple verbs.
  # @option opts [String] :permission Partial match for the aggregate permission value name of a permission object.
  # @option opts [String] :exclude_globals If set to &#39;true&#39;, this will exclude any permission with a global allowance on either &#39;application&#39;, &#39;resource_type&#39; or &#39;verb&#39;. The default is &#39;false&#39;.
  # @option opts [String] :exclude_roles An optional string filter which accepts one or more role UUIDs, comma-separated, to return permissions not associated with the supplied role(s).
  # @option opts [String] :allowed_only If set to &#39;true&#39;, this will exclude any permission with a role where the &#39;application&#39; is not in the role create allow list.
  # @return [PermissionPagination]
  describe 'list_permissions test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
