=begin
#Role Based Access Control

#The API for Role Based Access Control.

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for RBACApiClient::PolicyApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PolicyApi' do
  before do
    # run before each test
    @api_instance = RBACApiClient::PolicyApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PolicyApi' do
    it 'should create an instance of PolicyApi' do
      expect(@api_instance).to be_instance_of(RBACApiClient::PolicyApi)
    end
  end

  # unit tests for create_policies
  # Create a policy in a tenant
  # @param policy_in Policy to create
  # @param [Hash] opts the optional parameters
  # @return [PolicyExtended]
  describe 'create_policies test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_policy
  # Delete a policy in the tenant
  # @param uuid ID of policy to delete
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_policy test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_policy
  # Get a policy in the tenant
  # @param uuid ID of policy to get
  # @param [Hash] opts the optional parameters
  # @return [PolicyExtended]
  describe 'get_policy test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_policies
  # List the policies in the tenant
  # By default, responses are sorted in ascending order by policy name
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Parameter for selecting the amount of data returned.
  # @option opts [Integer] :offset Parameter for selecting the offset of data.
  # @option opts [String] :name Parameter for filtering resource by name using string contains search.
  # @option opts [String] :scope Parameter for filtering resource by scope.
  # @option opts [String] :group_name Parameter for filtering resource by group name using string contains search.
  # @option opts [String] :group_uuid Parameter for filtering resource by group uuid using UUID exact match.
  # @option opts [String] :order_by Parameter for ordering policies by value. For inverse ordering, supply &#39;-&#39; before the param value, such as: ?order_by&#x3D;-name
  # @return [PolicyPagination]
  describe 'list_policies test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_policy
  # Update a policy in the tenant
  # @param uuid ID of policy to update
  # @param policy_in Policy to update
  # @param [Hash] opts the optional parameters
  # @return [PolicyExtended]
  describe 'update_policy test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
